node server setup
mongo js setup
define server api
implement server api
define db api
implement db api
define ethereum contract purpose
define ethereum contract api
implement ethereum contract api

upgrade to typescript

mongo data model / schema √
  key: date
  value: to-do list

CRUD
  read or create today's list on load
    learn to use collection view √
  updating list on change
    todo completion
    ordering
    changing description
  creating new list at day end (4am) (see ***)

ethereum
  no ruby ethereum, switch everything to js
  store, on-chain, a hash of the day's list at EOD
  include methods to verify whether EOD list in db matches hash on chain
    forbid alteration of list in DB after EOD
      what if it is changed? Well... it doesn't change present day values
      except of score tracking. Say score tracking is also saved on-chain
        Then past alterations to the score will be ignored
        Calculate on-chain new score by adding previous to new but
          Hash all old days in order + previous hash
          Compare to hash of same on-chain
            If different, use old score to add new day
            If same, use local score to add new day... doesn't matter. same outcome
            Just forgot local storage of score
  What if all off-chain records, like trees, are lost?
    You can be confident that on-chain state will not be changed w/o consensus but, don't know how it got to that
    Don't forget about DECRYPTING the hash with saved key!
      Instead of prev day and new day as 2 keys, just do curr day and stored key. Even symm key.

server should not be stateful
  caching in front of db is separate

new list flow
  a. let user edit when day is past and frontend still loaded
      let user edit past days
  b. don't let user edit when day is past

  after 4am server will know if it the first request of a new day
    and respond with the new empty list
  ***"what day is it (what time is it?)?" and "is today's list made yet?"
    always ask db for today's list
      if it's not there, make a blank one


